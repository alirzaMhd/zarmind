{
  "name": "zarmind-backend",
  "version": "1.0.0",
  "description": "Backend API for Zarmind - Persian Jewelry Store Accounting System with AI",
  "main": "dist/server.js",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon --exec ts-node src/server.ts",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "clean": "rm -rf dist",
    "prebuild": "npm run clean",
    "postbuild": "cp -r src/config dist/config 2>/dev/null || true",
    "test": "jest --coverage",
    "test:watch": "jest --watch",
    "test:unit": "jest --testPathPattern=tests/unit",
    "test:integration": "jest --testPathPattern=tests/integration",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\"",
    "migrate": "node dist/scripts/migrate.js",
    "migrate:rollback": "node dist/scripts/rollback.js",
    "seed": "node dist/scripts/seed.js",
    "db:setup": "npm run migrate && npm run seed",
    "type-check": "tsc --noEmit",
    "prepare": "husky install || true"
  },
  "keywords": [
    "accounting",
    "jewelry",
    "persian",
    "ai",
    "ocr",
    "inventory",
    "typescript",
    "express",
    "postgresql"
  ],
  "author": "Zarmind Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/zarmind.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/zarmind/issues"
  },
  "homepage": "https://github.com/your-username/zarmind#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "pg": "^8.11.3",
    "pg-hstore": "^2.3.4",
    "dotenv": "^16.3.1",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "express-rate-limit": "^7.1.5",
    "multer": "^1.4.5-lts.1",
    "sharp": "^0.33.1",
    "tesseract.js": "^5.0.4",
    "@google-cloud/vision": "^4.0.2",
    "joi": "^17.11.0",
    "express-validator": "^7.0.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "morgan": "^1.10.0",
    "uuid": "^9.0.1",
    "date-fns": "^3.0.6",
    "date-fns-jalali": "^3.6.0-0",
    "node-cron": "^3.0.3",
    "axios": "^1.6.2",
    "nodemailer": "^6.9.7",
    "express-async-errors": "^3.1.1",
    "http-status-codes": "^2.3.0",
    "cookie-parser": "^1.4.6",
    "sanitize-html": "^2.11.0"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node": "^20.10.6",
    "@types/pg": "^8.10.9",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/multer": "^1.4.11",
    "@types/morgan": "^1.9.9",
    "@types/uuid": "^9.0.7",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.14",
    "@types/cookie-parser": "^1.4.6",
    "@types/sanitize-html": "^2.9.5",
    "@types/jest": "^29.5.11",
    "@types/supertest": "^6.0.2",
    "typescript": "^5.3.3",
    "ts-node": "^10.9.2",
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "supertest": "^6.3.3",
    "@typescript-eslint/eslint-plugin": "^6.16.0",
    "@typescript-eslint/parser": "^6.16.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.2",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.5"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts",
    "ignore": [
      "src/**/*.test.ts",
      "node_modules"
    ],
    "exec": "ts-node src/server.ts",
    "env": {
      "NODE_ENV": "development"
    }
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/server.ts",
      "!src/types/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "moduleFileExtensions": [
      "ts",
      "js",
      "json"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.json"
      }
    }
  }
}